package openoracle_test

import (
	"testing"

	"code.vegaprotocol.io/oracles-relay/openoracle"
)

func TestVerifySuccess(t *testing.T) {
	payload := `{
    "messages": [
        "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000621f0ee800000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000a4847d4a00000000000000000000000000000000000000000000000000000000000000006707269636573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034254430000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000621f0ee800000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000b219df400000000000000000000000000000000000000000000000000000000000000006707269636573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034554480000000000000000000000000000000000000000000000000000000000"
    ],
    "prices": {
        "BAT": "0.7477895",
        "BTC": "44162.34"
    },
    "signatures": [
        "0xef893d807434364a70faf3dab7f6ba2ef82c74433ae35ac3c4dc60cd1a9b1df467a4d027e5f63676bf12093671504c01a8fb0411415c35c8469332794b949ae7000000000000000000000000000000000000000000000000000000000000001c",

        "0x21e231317d30edb6d999702c7be5f4506d6d1d097fe50dadf8abfef3d87e1ad93d7695d0b39bed6e35195accc8b6f4abef7f66f6ca92930edc350beaed3be860000000000000000000000000000000000000000000000000000000000000001b"
    ],
    "timestamp": "1646202600"
}`
	ooMsg, err := openoracle.Unmarshal([]byte(payload))
	if err != nil {
		t.Logf("Failed to unmarshal payload: %+v", err)
		t.FailNow()
	}
	keys, kv, err := openoracle.Verify(*ooMsg)
	if err != nil {
		t.Logf("Verification failed: %+v\n", err)
		t.FailNow()
	}
	t.Logf("%#v\n", keys)
	t.Logf("%#v\n", kv)
}

// verification passes, but we get 2 distinct public keys
func testVerifyFail(t *testing.T) {
	payload := `{
	"messages": [
		"0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000621f0ee800000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000a4847d4a00000000000000000000000000000000000000000000000000000000000000006707269636573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034254430000000000000000000000000000000000000000000000000000000000",
		"0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000621f0ee800000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000b219df400000000000000000000000000000000000000000000000000000000000000006707269636573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034554480000000000000000000000000000000000000000000000000000000000"
	],
	"prices": {
		"BAT": "0.7477895",
		"BTC": "44162.34"
	},
	"signatures": [
		"0xef893d807434364a70faf3dab7f6ba2ef82c74433ae35ac3c4dc60cd1a9b1df467a4d027e5f63676bf12093671504c01a8fb0411415c35c8469332794b949ae7000000000000000000000000000000000000000000000000000000000000001c",
		"0xef893d807434364a70faf3dab7f6ba2ef82c74433ae35ac3c4dc60cd1a9b1df467a4d027e5f63676bf12093671504c01a8fb0411415c35c8469332794b949ae7000000000000000000000000000000000000000000000000000000000000001c"

	],
	"timestamp": "1646202600"
}`
	ooMsg, err := openoracle.Unmarshal([]byte(payload))
	if err != nil {
		t.Logf("Failed to unmarshal payload: %+v", err)
		t.FailNow()
	}
	keys, kv, err := openoracle.Verify(*ooMsg)
	if err == nil {
		t.Logf("Verification passed? Keys: %#v - KV: %#v\n", keys, kv)
		t.FailNow()
	}
	t.Logf("verification failed - as expected: %#v\n", err)
}
